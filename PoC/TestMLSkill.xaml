<Activity mc:Ignorable="sap sap2010" x:Class="TestMLSkill" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:p="http://schemas.uipath.com/workflow/activities/document-processing-contracts/taxonomy" xmlns:p1="http://schemas.uipath.com/workflow/activities/document-processing-contracts/dom" xmlns:p2="http://schemas.uipath.com/workflow/activities/intelligentocr/extraction" xmlns:p3="http://schemas.uipath.com/workflow/activities/documentunderstanding-ml" xmlns:p4="http://schemas.uipath.com/workflow/activities/document-processing-contracts/results" xmlns:p5="http://schemas.uipath.com/workflow/activities/document-processing-contracts/extraction" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:ucas="clr-namespace:UiPath.Core.Activities.Storage;assembly=UiPath.System.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:upr="clr-namespace:UiPath.Platform.ResourceHandling;assembly=UiPath.Platform" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_TargetDocument" Type="InArgument(x:String)" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1175,941</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>TestMLSkill_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Results</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Dom</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Taxonomy</x:String>
      <x:String>UiPath.IntelligentOCR.Activities.DataExtraction</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.DataExtraction</x:String>
      <x:String>UiPath.DocumentUnderstanding.ML.Activities</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts</x:String>
      <x:String>UiPath.DocumentUnderstanding.ML.Activities.Editors</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath.Shared.Activities.Business</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>UiPath.Core.Activities.Storage</x:String>
      <x:String>UiPath.Core.Activities.Orchestrator</x:String>
      <x:String>UiPath.DataService.Activities</x:String>
      <x:String>UiPath.DataService.Definition</x:String>
      <x:String>UiPath.DataService.Activities.Models</x:String>
      <x:String>TestMarcaRenovacion</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Net.Mail</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.DocumentProcessing.Contracts</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.DocumentUnderstanding.ML.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.ViewModels</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>netstandard</AssemblyReference>
      <AssemblyReference>UiPath.DataService.Activities.Core</AssemblyReference>
      <AssemblyReference>UiPath.DataService.Definition</AssemblyReference>
      <AssemblyReference>DataService.TestMarcaRenovacion</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="TestMLSkill" sap:VirtualizedContainerService.HintSize="472,876" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="p1:Document" Name="dom" />
      <Variable x:TypeArguments="x:String" Name="doctext" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:String)" Default="[new Dictionary(Of String, String)]" Name="Config" />
      <Variable x:TypeArguments="p:DocumentTaxonomy" Name="docTaxonomy" />
      <Variable x:TypeArguments="p4:ExtractionResult" Name="ExtRes" />
      <Variable x:TypeArguments="x:String" Name="ExtResString" />
      <Variable x:TypeArguments="ui:QueueItem" Name="tItem" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Framework\00_ReadConfigFile.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="410,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_4" UnSafe="False" WorkflowFileName="Framework\00_ReadConfigFile.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="in_ConfigFile">Data\Config.xlsx</InArgument>
        <InArgument x:TypeArguments="s:String[]" x:Key="in_ConfigSheets">[{"Settings", "Constants"}]</InArgument>
        <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="out_Config">[Config]</OutArgument>
        <OutArgument x:TypeArguments="x:Int32" x:Key="out_MaxAttempts" />
        <OutArgument x:TypeArguments="x:TimeSpan" x:Key="out_RetryInterval" />
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Framework\10_InitializeProcess.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="410,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="Framework\10_InitializeProcess.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="in_AssetsSheet">Assets</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_ConfigFile">Data\Config.xlsx</InArgument>
        <InArgument x:TypeArguments="x:Int32" x:Key="in_MaxAttempts">3</InArgument>
        <InArgument x:TypeArguments="x:TimeSpan" x:Key="in_RetryInterval">00:00:05</InArgument>
        <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="io_Config">[Config]</InOutArgument>
        <OutArgument x:TypeArguments="p:DocumentTaxonomy" x:Key="out_DocTaxonomy">[docTaxonomy]</OutArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <ui:InterruptibleDoWhile CurrentIndex="{x:Null}" DisplayName="Do While" sap:VirtualizedContainerService.HintSize="410,459" sap2010:WorkflowViewState.IdRef="InterruptibleDoWhile_1">
      <ui:InterruptibleDoWhile.Body>
        <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="376,323" sap2010:WorkflowViewState.IdRef="Sequence_6">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:GetQueueItem ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" DisplayName="Get Transaction Item" FolderPath="PoCAICenter" sap:VirtualizedContainerService.HintSize="334,143" sap2010:WorkflowViewState.IdRef="GetQueueItem_1" QueueType="Input_Marcas" TransactionItem="[tItem]" />
          <If Condition="[tItem IsNot Nothing]" DisplayName="If Item Get" sap:VirtualizedContainerService.HintSize="334,52" sap2010:WorkflowViewState.IdRef="If_1">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If.Then>
              <Sequence sap:VirtualizedContainerService.HintSize="644,1844" sap2010:WorkflowViewState.IdRef="Sequence_4">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Sequence DisplayName="Sequence Process" sap:VirtualizedContainerService.HintSize="602,1756" sap2010:WorkflowViewState.IdRef="Sequence_3">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="upr:ILocalResource" Name="CurrentFile" />
                    <Variable x:TypeArguments="x:String" Name="filenameToDownload" />
                    <Variable x:TypeArguments="x:String" Name="destinationFile" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="540,147" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
                    <ui:MultipleAssign.AssignOperations>
                      <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_1">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="x:String">[filenameToDownload]</OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="x:String">[tItem.SpecificContent("FileName").ToString]</InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_2">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="x:String">[destinationFile]</OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="x:String">["Data\StorageDownloads\" + tItem.SpecificContent("FileName").ToString]</InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                      </scg:List>
                    </ui:MultipleAssign.AssignOperations>
                  </ui:MultipleAssign>
                  <ucas:DownloadStorageFile TimeoutMS="{x:Null}" Destination="[&quot;Data\StorageDownloads\&quot; + tItem.SpecificContent(&quot;FileName&quot;).ToString]" DisplayName="Download Storage File" sap:VirtualizedContainerService.HintSize="540,133" sap2010:WorkflowViewState.IdRef="DownloadStorageFile_1" Path="[fileNameToDownload]" Result="[CurrentFile]" StorageBucketName="PDF_Marcas" />
                  <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="540,1285" sap2010:WorkflowViewState.IdRef="Sequence_2">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign sap:VirtualizedContainerService.HintSize="478,82" sap2010:WorkflowViewState.IdRef="Assign_1">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[in_TargetDocument]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[CurrentFile.LocalPath]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Framework\20_Digitize.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="478,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="Framework\20_Digitize.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="x:String" x:Key="in_TargetDocument">[in_TargetDocument]</InArgument>
                        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_Config">[Config]</InArgument>
                        <InArgument x:TypeArguments="x:Int32" x:Key="in_MaxAttempts">3</InArgument>
                        <InArgument x:TypeArguments="x:TimeSpan" x:Key="in_RetryInterval">00:00:05</InArgument>
                        <OutArgument x:TypeArguments="p1:Document" x:Key="out_DOM">[dom]</OutArgument>
                        <OutArgument x:TypeArguments="x:String" x:Key="out_DocText">[doctext]</OutArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                    <p2:DataExtractionScope ClassificationResult="{x:Null}" DisplayName="Data Extraction Scope" DocumentObjectModel="[dom]" DocumentPath="[in_TargetDocument]" DocumentText="[doctext]" DocumentTypeId="Semi-StructuredDocuments.NoCategory.MarcasES" ExtractionResult="[ExtRes]" FormatValuesIfPossible="True" sap:VirtualizedContainerService.HintSize="478,515" sap2010:WorkflowViewState.IdRef="DataExtractionScope_1" Taxonomy="[docTaxonomy]" TaxonomyConfiguration="{}{&quot;TaxonomyMappings&quot;:{&quot;UI77e97ae4ddea414296ce791aa2100da9&quot;:{&quot;DocumentTypeMappings&quot;:{&quot;Semi-StructuredDocuments.NoCategory.MarcasES&quot;:{&quot;FieldMappings&quot;:{&quot;Semi-StructuredDocuments.NoCategory.MarcasES.num-marca&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;Semi-StructuredDocuments.NoCategory.MarcasES.num-marca&quot;,&quot;ExtractorTaxonomyFieldId&quot;:&quot;\&quot;num-marca\&quot;&quot;,&quot;ShouldExtract&quot;:true},&quot;Semi-StructuredDocuments.NoCategory.MarcasES.fecha-vencimiento&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;Semi-StructuredDocuments.NoCategory.MarcasES.fecha-vencimiento&quot;,&quot;ExtractorTaxonomyFieldId&quot;:&quot;\&quot;fecha-vencimiento\&quot;&quot;,&quot;ShouldExtract&quot;:true},&quot;Semi-StructuredDocuments.NoCategory.MarcasES.titular&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;Semi-StructuredDocuments.NoCategory.MarcasES.titular&quot;,&quot;ExtractorTaxonomyFieldId&quot;:&quot;\&quot;titular\&quot;&quot;,&quot;ShouldExtract&quot;:true},&quot;Semi-StructuredDocuments.NoCategory.MarcasES.fecha-publicacion&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;Semi-StructuredDocuments.NoCategory.MarcasES.fecha-publicacion&quot;,&quot;ExtractorTaxonomyFieldId&quot;:&quot;\&quot;fecha-publicacion\&quot;&quot;,&quot;ShouldExtract&quot;:true},&quot;Semi-StructuredDocuments.NoCategory.MarcasES.distintivo&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;Semi-StructuredDocuments.NoCategory.MarcasES.distintivo&quot;,&quot;ExtractorTaxonomyFieldId&quot;:&quot;\&quot;distintivo\&quot;&quot;,&quot;ShouldExtract&quot;:true},&quot;Semi-StructuredDocuments.NoCategory.MarcasES.clases&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;Semi-StructuredDocuments.NoCategory.MarcasES.clases&quot;,&quot;ExtractorTaxonomyFieldId&quot;:&quot;\&quot;items\&quot;&quot;,&quot;ShouldExtract&quot;:true},&quot;Semi-StructuredDocuments.NoCategory.MarcasES.clases.clases&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;Semi-StructuredDocuments.NoCategory.MarcasES.clases.clases&quot;,&quot;ExtractorTaxonomyFieldId&quot;:&quot;\&quot;clases\&quot;&quot;,&quot;ShouldExtract&quot;:true},&quot;Semi-StructuredDocuments.NoCategory.MarcasES.clases.desc-clases&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;Semi-StructuredDocuments.NoCategory.MarcasES.clases.desc-clases&quot;,&quot;ExtractorTaxonomyFieldId&quot;:&quot;\&quot;desc-clases\&quot;&quot;,&quot;ShouldExtract&quot;:true},&quot;Semi-StructuredDocuments.NoCategory.MarcasES.tipo&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;Semi-StructuredDocuments.NoCategory.MarcasES.tipo&quot;,&quot;ExtractorTaxonomyFieldId&quot;:&quot;\&quot;tipo\&quot;&quot;,&quot;ShouldExtract&quot;:true}},&quot;ExtractorDocumentTypeId&quot;:&quot;\&quot;\&quot;&quot;},&quot;Semi-StructuredDocuments.NoCategory.RenovacionES&quot;:{&quot;FieldMappings&quot;:{},&quot;ExtractorDocumentTypeId&quot;:&quot;\&quot;\&quot;&quot;}}}},&quot;ExtractorMinimumConfidence&quot;:{&quot;UI77e97ae4ddea414296ce791aa2100da9&quot;:&quot;0&quot;},&quot;ExtractorsAliases&quot;:{},&quot;DocumentTypeOptionsByExtractor&quot;:{&quot;UI77e97ae4ddea414296ce791aa2100da9&quot;:[{&quot;FieldId&quot;:&quot;&quot;,&quot;SubOptions&quot;:[{&quot;FieldId&quot;:&quot;num-marca&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;fecha-vencimiento&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;titular&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;fecha-publicacion&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;distintivo&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;tipo&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;items&quot;,&quot;SubOptions&quot;:[{&quot;FieldId&quot;:&quot;clases&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;desc-clases&quot;,&quot;SubOptions&quot;:null}]}]}]}}">
                      <p2:DataExtractionScope.Extractors>
                        <p3:MachineLearningExtractor Endpoint="{x:Null}" ApiKey="u7kjrbgdt+7C1FbsSM7z3Pb4LjpGPbHH/d3MpevDaVVydOWpOA5hkMfk4Nas8N5uT8vQYy4aEl4HXDnS0zNp1Q==" Configuration="{}{&quot;Endpoint&quot;:&quot;&quot;,&quot;ApiKey&quot;:&quot;u7kjrbgdt+7C1FbsSM7z3Pb4LjpGPbHH/d3MpevDaVVydOWpOA5hkMfk4Nas8N5uT8vQYy4aEl4HXDnS0zNp1Q==&quot;,&quot;SelectedMLSkill&quot;:&quot;MarcasRenovacion&quot;,&quot;AvailableMLSkills&quot;:[&quot;MarcasRenovacion&quot;]}" DisplayName="Machine Learning Extractor" sap:VirtualizedContainerService.HintSize="234,193" sap2010:WorkflowViewState.IdRef="MachineLearningExtractor_2" PersistenceId="UI77e97ae4ddea414296ce791aa2100da9" RetryOnFailure="True" SelectedMLSkill="MarcasRenovacion" Timeout="100000" UseServerSideOCR="False">
                          <p3:MachineLearningExtractor.AvailableMLSkills>
                            <scg:List x:TypeArguments="x:String" Capacity="1">
                              <x:String>MarcasRenovacion</x:String>
                            </scg:List>
                          </p3:MachineLearningExtractor.AvailableMLSkills>
                          <p3:MachineLearningExtractor.DocumentBounds>
                            <InArgument x:TypeArguments="p4:ResultsDocumentBounds">
                              <DelegateArgumentValue x:TypeArguments="p4:ResultsDocumentBounds">
                                <DelegateInArgument x:TypeArguments="p4:ResultsDocumentBounds" Name="DocumentBounds" />
                              </DelegateArgumentValue>
                            </InArgument>
                          </p3:MachineLearningExtractor.DocumentBounds>
                          <p3:MachineLearningExtractor.DocumentObjectModel>
                            <InArgument x:TypeArguments="p1:Document">
                              <DelegateArgumentValue x:TypeArguments="p1:Document">
                                <DelegateInArgument x:TypeArguments="p1:Document" Name="DocumentObjectModel" />
                              </DelegateArgumentValue>
                            </InArgument>
                          </p3:MachineLearningExtractor.DocumentObjectModel>
                          <p3:MachineLearningExtractor.DocumentPath>
                            <InArgument x:TypeArguments="x:String">
                              <DelegateArgumentValue x:TypeArguments="x:String">
                                <DelegateInArgument x:TypeArguments="x:String" Name="DocumentPath" />
                              </DelegateArgumentValue>
                            </InArgument>
                          </p3:MachineLearningExtractor.DocumentPath>
                          <p3:MachineLearningExtractor.DocumentText>
                            <InArgument x:TypeArguments="x:String">
                              <DelegateArgumentValue x:TypeArguments="x:String">
                                <DelegateInArgument x:TypeArguments="x:String" Name="DocumentText" />
                              </DelegateArgumentValue>
                            </InArgument>
                          </p3:MachineLearningExtractor.DocumentText>
                          <p3:MachineLearningExtractor.ExtractorDocumentType>
                            <InArgument x:TypeArguments="p5:ExtractorDocumentType">
                              <DelegateArgumentValue x:TypeArguments="p5:ExtractorDocumentType">
                                <DelegateInArgument x:TypeArguments="p5:ExtractorDocumentType" Name="ExtractorDocumentType" />
                              </DelegateArgumentValue>
                            </InArgument>
                          </p3:MachineLearningExtractor.ExtractorDocumentType>
                          <p3:MachineLearningExtractor.ExtractorResult>
                            <OutArgument x:TypeArguments="p5:ExtractorResult">
                              <DelegateArgumentReference x:TypeArguments="p5:ExtractorResult">
                                <DelegateOutArgument x:TypeArguments="p5:ExtractorResult" Name="ExtractorResult" />
                              </DelegateArgumentReference>
                            </OutArgument>
                          </p3:MachineLearningExtractor.ExtractorResult>
                          <p3:MachineLearningExtractor.PredictionId>
                            <InArgument x:TypeArguments="x:String">
                              <DelegateArgumentValue x:TypeArguments="x:String">
                                <DelegateInArgument x:TypeArguments="x:String" Name="PredictionId" />
                              </DelegateArgumentValue>
                            </InArgument>
                          </p3:MachineLearningExtractor.PredictionId>
                        </p3:MachineLearningExtractor>
                      </p2:DataExtractionScope.Extractors>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </p2:DataExtractionScope>
                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="70_Export_WithDataService.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="478,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" UnSafe="False" WorkflowFileName="Framework\70_Export_WithDataService.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="p4:ExtractionResult" x:Key="in_ExtractionResults">[ExtRes]</InArgument>
                        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_Config">[Config]</InArgument>
                        <InArgument x:TypeArguments="x:Int32" x:Key="in_MaxAttempts">3</InArgument>
                        <InArgument x:TypeArguments="x:TimeSpan" x:Key="in_RetryInterval">00:00:05</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_Filename">[CurrentFile.FullName]</InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:InvokeWorkflowFile>
                    <ui:SetTransactionStatus ContinueOnError="{x:Null}" Reason="{x:Null}" ServiceBaseAddress="{x:Null}" TimeoutMS="{x:Null}" DisplayName="Set Transaction Status" ErrorType="Business" sap:VirtualizedContainerService.HintSize="478,191" sap2010:WorkflowViewState.IdRef="SetTransactionStatus_1" Status="Successful" TransactionItem="[tItem]">
                      <ui:SetTransactionStatus.Analytics>
                        <scg:Dictionary x:TypeArguments="x:String, InArgument" />
                      </ui:SetTransactionStatus.Analytics>
                      <ui:SetTransactionStatus.Output>
                        <scg:Dictionary x:TypeArguments="x:String, InArgument" />
                      </ui:SetTransactionStatus.Output>
                    </ui:SetTransactionStatus>
                  </Sequence>
                </Sequence>
              </Sequence>
            </If.Then>
            <If.Else>
              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_5" />
            </If.Else>
          </If>
        </Sequence>
      </ui:InterruptibleDoWhile.Body>
      <ui:InterruptibleDoWhile.Condition>
        <VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="tItem IsNot Nothing" />
      </ui:InterruptibleDoWhile.Condition>
    </ui:InterruptibleDoWhile>
  </Sequence>
</Activity>